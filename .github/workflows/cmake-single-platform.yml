# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]   # Multi-platform
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    # âœ… Install dependencies based on OS
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install -y gcc-arm-none-eabi

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install arm-none-eabi-gcc

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Configure CMake for Unit Tests
      run: cmake -S ${{github.workspace}}/unit_tests/mempool_unit_tests -B ${{github.workspace}}/unit_tests/mempool_unit_tests/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build for Unit Tests
      run: cmake --build ${{github.workspace}}/unit_tests/mempool_unit_tests/build --config ${{env.BUILD_TYPE}}

    - name: Run Unit Tests
      working-directory: ${{github.workspace}}/unit_tests/mempool_unit_tests/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest

